{"pageProps":{"frontmatter":{"layout":"blog-post","title":"Overview of Ballerina 0.980","author":"Kishanthan Thangarajah","published-date":"26 July 2018","status":"Published","abstract":"Overview of new features and improvements added in the ballerina 0.980.0 release.","socialmediaimage":"ballet-sneaker-dress-ballet-dancer-163379.jpeg","permalink":"/posts/improvements-and-new-features-in-ballerina-0.980.0-release/"},"content":"\n\nBallerina 0.980.0 release included some type system improvements and new features. This release also focused on stabilizing the platform with lot of bug fixes and improvements.\n\n## Object syntax change\n\nObject type descriptor syntax now supports visibility modifiers for both object fields and functions. There are three types of access modifiers (public, private, no-modifier) as explained below.\n\n```ballerina\n\npublic type Person object {\n    // public - visible everywhere\n    public string name;\n\n    // private - visible only within object and its member functions\n    private int age;\n\n    // no-modifier - visible only within same package\n    string email;\n};\n```\n\n\n## Closed and open records\n\nAn `open` record can contain extra fields, that is, fields other than those named by individual type descriptors in the record type definition. By default, records can contain extra fields with `any` value without any changes to record definition as explained below.\n\n```ballerina\n\ntype Person record {\n    string name,\n    int age = 10,\n};\n\n...\n// The \"country\" is an extra field, which is not defined in the person\n// type descriptor.\nPerson tom = { name : \"tom\", age : 20, country : \"USA\"};\n\n// You can access the \"country\" field similar to other fields, but the\n// return type will be `any`.\nany country = tom.country;\n\n```\n\nAdditional fields can be defined by using an optional `RecordRestType...` at the end of the record definition. In the above example, the Person record definition is equivalent to the definition with `any...`.\n\n```ballerina\n\ntype Person record {\n    string name,\n    int age = 10,\n    any...\n};\n\n```\n\nThe “rest fields” can also be constrained to other types. Below example shows how it is constrained to `string` type.\n\n```ballerina\n\ntype Person record {\n    string name,\n    int age = 10,\n    string…\n};\n\n...\n\nPerson tom = { name : \"tom\", age : 20, country : \"USA\"};\nstring country = tom.country;\n\n```\n\nA `closed` record cannot contain any extra fields other than what is defined. A closed record can be defined with `RecordRestType` being `!` as below.\n\n```ballerina\n\ntype Person record {\n    string name,\n    int age = 10,\n    !...\n};\n\n\n// Following will result in a compile time error.\nPerson tom = { name : \"tom\", age : 20, country : \"USA\"};\n\n```\n\n\n## Fixed length arrays\n\nThe length of an array can be fixed by providing the array length with the array type descriptor.\n\n```ballerina\n\nint[5] array1 = [2, 15, 200, 1500, 5000];\n\n// Following creates an integer array of size five, filled with\n// default integer values\nint[5] array2;\n\n```\n\nAn array length of `!...` means that the length of the array is to be implied from the context; as shown below:\n\n```ballerina\n\n// Following creates a sealed integer array of size 3.\nint[!...] sealedArray = [1, 3, 5];\n\n```\n\n\n## Byte type\n\nThe `byte` type represents the set of 8-bit unsigned integers. The implicit initial value of the `byte` type is `0`. Value space for `byte` is 0-255 both inclusive.\n\nThe following is an example of byte definition.\n\n```ballerina\n\nbyte c = 23;\n\n```\n\nAlong with general byte array type, there is also a special syntax for defining base64 and base16 based array of bytes. With this, `blob` type is removed and replaced by byte array.\n\n```ballerina\n\nbyte[] arr1 = [5, 24, 56, 243];\nbyte[] arr2 = base16 `aeeecdefabcd12345567888822`;\nbyte[] arr3 = base64 `aGVsbG8gYmFsbGVyaW5hICEhIQ==`;\n\n```\n\n## Bitwise AND (&), OR (|), XOR (^)\nBitwise operations AND (&), OR (|), XOR (^) have been added for `byte` type and `int` type with the following rules.\n\nBoth the right-hand-side and left-hand-side of the expression should be of the same type (`byte` or `int`), and the expected type will be also of the same type. If this is not the case, it will result in a compilation error.\nAn explicit conversion operation should be applied if the type of one side is not the same as the other side.\n\n```ballerina\n\nbyte a = 13;\nbyte b = 45;\nbyte c = a & b;\nbyte d = a | b;\nbyte e = a ^ b;\n\n```\n\n## Table expression\n\nA table is intended to be similar to a relational database table. A table value contains an immutable set of column names and a set of data rows. Syntax for defining a table and adding data rows is as below.\n\n```ballerina\n\ntable<Person> t1 = table {\n\t{ primarykey id, primarykey salary, name, age, married }, [\n\t\t {1, 300.5, \"jane\",  30, true},\n\t\t {2, 302.5, \"anne\",  23, false},\n\t\t {3, 320.5, \"john\",  33, true}\n\t]\n};\n\n// We can also create the row records seperately and then use it with\n// table definition\nPerson p1 = { id: 1, age: 30, salary: 300.50, name: \"jane\", married: true };\nPerson p2 = { id: 1, age: 30, salary: 300.50, name: \"jane\", married: true };\n\ntable<Person> t1 = table {\n\t{ primarykey id, salary, name, age, married },\n\t[p1, p2]\n};\n\n```\n\n## Map access\nValues of a map can be accessed using index-based syntax as well as field-access syntax. Accessing a value using field-based syntax returns the value if the key exists. Otherwise a runtime error is thrown. Index-based syntax also will return the value if the key exists. However, it will return a null value if the key does not exist. This would also mean that, for a constrained map, the type of the return value for the index-based syntax is always the `constraint_type|()` as explained below.\n\n\n```ballerina\n\nmap<string> m = {\"fname\" : \"John\", \"lname\" : \"Doe\"}\n\n// Field based access\nstring firstName = m.fname;\n\n// Following will result in a runtime error\nstring middleName = m.mname;\n\n// Index based access\nstring? firstName = m[\"fname\"];\n\n// Following will return null\nstring? middleName = m[\"mname\"];\n\n```\n\n## Ballerina observability\n- New API's have been introduced with ballerina observability functionality, such that developers can define their own trace blocks and metrics as explained below.\n- Developers can attach the trace information of their code block to the default Ballerina traces, or a new trace as below.\n\n```ballerina\n\n// Create and attach span to the default Ballerina request trace.\nint spanId = check observe:startSpan(\"Child Span\");\n    // Do Something\n_ = observe:finishSpan(spanId);\n\n// Create a completely new trace.\nint spanId = observe:startRootSpan(\"Parent Span\");\n    //Do Something\nint spanId2 = check observe:startSpan(\"Child Span\", parentSpanId = spanId);\n    // Do Something\n_ = observe:finishSpan(spanId2);\n    // Do Something\n_ = observe:finishSpan(spanId);\n\n```\n\n- Developers can create a metric (counter or gauge) and have have their own measurements. The created metric can be registered in order to include its measurements to reporters such as Prometheus as below.\n\n```ballerina\n\n// Create counter and register.\nmap<string> counterTags = { \"method\": \"GET\" };\nobserve:Counter counterWithTags = new (\"CounterWithTags\",\n    desc = \"Some description\", tags = counterTags);\ncounterWithTags.register() but {\n   error e => log:printError(\"Cannot register the counter\", err = e)\n};\n\n// Create statistics config to enable statistics calculation.\nobserve:StatisticConfig[] statsConfigs = [];\nobserve:StatisticConfig config =\n    {timeWindow:30000, percentiles:[0.33, 0.5, 0.9, 0.99], buckets:3};\nstatsConfigs[0]=config;\n\n// Create gauge and register.\nobserve:Gauge gaugeWithStats = new (\"GaugeWithTags\",\n    desc = \"Some description\", tags = gaugeTags,\n    statisticConfig = statsConfigs);\n\n```\n\n- All metrics registered can be retrieved and looked up individually as below.\n\n```ballerina\n\n// Get All Metrics\nobserve:Metric[] metrics = observe:getAllMetrics();\nforeach metric in metrics {\n    // Do something.\n}\n\n// Look up a registered metric.\nmap<string> tags = { \"method\": \"GET\" };\nobserve:Counter|observe:Gauge|() metric =\n    observe:lookupMetric(\"MetricName\", tags = tags);\nmatch metric {\n    observe:Counter counter => {\n            counter.increment(amount=10);\n    }\n    observe:Gauge gauge => {\n            gauge.increment(amount = 10.0);\n    }\n    () => {\n           io:println(\"No Metric Found!\");\n    }\n}\n\n```\n\n## Standard library improvements\n\n- With the inclusion of byte[], WebSocket related signatures of resources such as `onBinary`, `onPing`, and `onPong` and functions such as `pushBinary()`, `ping()`, and `pong()` now have `byte[]` in their signature instead of a blob.\n- The HTTP transport error handler has been improved so that it recovers execution from inbound/outbound failures such as idle socket timeout and abrupt connection closure.\n- The circuit breaker now supports request volume threshold parameter. This parameter sets the minimum number of requests in a `RollingWindow` that will trip the circuit. So the rollingWindow configurations can be specified as below.\n\n```ballerina\n\nrollingWindow : {\n      timeWindowMillis: 10000,\n      bucketSizeMillis: 2000,\n      requestVolumeThreshold: 10\n}\n\n```\n\n## Build and package management\n\n- The Ballerina `build` command output has been enhanced with more details about the build. Also by default, the test module will now be executed with the `build` command.\n- Ballerina `push` command now mandates the Ballerina `build` also along with it, which make sure that packages are built before it is pushed to the Central.\n- Ballerina Central now supports to view previous versions of a package. It also now shows Ballerina version compatibility section.\n\n## IDEs and language server\n\n- Composer is now shipped as a native Electron App.\n- Language server now includes source code formatting and also supports finding all symbols in a document and in the workspace.\n- IntelliJ IDEA Ballerina Plugin has added improvements for the Ballerina source code debugger.\n","codes":"[[-633723345,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ublic </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Person</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">object</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">// public - visible everywhere</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">// private - visible only within object and its member functions</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #CF222E\\\">private</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> age;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">// no-modifier - visible only within same package</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> email;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[-1088857394,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ype Person </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> age </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">..</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> The </span><span style=\\\"color: #0A3069\\\">&quot;country&quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">is</span><span style=\\\"color: #24292F\\\"> an extra </span><span style=\\\"color: #CF222E\\\">field</span><span style=\\\"color: #24292F\\\">, which </span><span style=\\\"color: #CF222E\\\">is</span><span style=\\\"color: #24292F\\\"> not defined </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> the person</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">descriptor</span><span style=\\\"color: #24292F\\\">.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">erson tom </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> { name </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;tom&quot;</span><span style=\\\"color: #24292F\\\">, age </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">20</span><span style=\\\"color: #24292F\\\">, country </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;USA&quot;</span><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> You can access the </span><span style=\\\"color: #0A3069\\\">&quot;country&quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">field</span><span style=\\\"color: #24292F\\\"> similar to other fields, but the</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">will</span><span style=\\\"color: #24292F\\\"> be `</span><span style=\\\"color: #CF222E\\\">any</span><span style=\\\"color: #24292F\\\">`.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ny country </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> tom.country;</span></span></code></pre>\"],[-85546283,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ype Person </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> age </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #CF222E\\\">any...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[-375804473,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ype Person </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> age </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\">…</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">..</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">erson tom </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> { name </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;tom&quot;</span><span style=\\\"color: #24292F\\\">, age </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">20</span><span style=\\\"color: #24292F\\\">, country </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;USA&quot;</span><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">tring country </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> tom.country;</span></span></code></pre>\"],[-288661218,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ype Person </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> age </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #CF222E\\\">!...</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Following will result </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> a compile time </span><span style=\\\"color: #CF222E\\\">error</span><span style=\\\"color: #24292F\\\">.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">erson tom </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> { name </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;tom&quot;</span><span style=\\\"color: #24292F\\\">, age </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">20</span><span style=\\\"color: #24292F\\\">, country </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;USA&quot;</span><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[1584018584,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">nt[</span><span style=\\\"color: #0550AE\\\">5</span><span style=\\\"color: #24292F\\\">] array1 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> [</span><span style=\\\"color: #0550AE\\\">2</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">15</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">200</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">1500</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">5000</span><span style=\\\"color: #24292F\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Following creates an integer array of size five, filled with</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">default</span><span style=\\\"color: #24292F\\\"> integer values</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">nt[</span><span style=\\\"color: #0550AE\\\">5</span><span style=\\\"color: #24292F\\\">] array2;</span></span></code></pre>\"],[-1527758341,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Following creates a sealed integer array of size </span><span style=\\\"color: #0550AE\\\">3.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">nt[</span><span style=\\\"color: #CF222E\\\">!...</span><span style=\\\"color: #24292F\\\">] sealedArray </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> [</span><span style=\\\"color: #0550AE\\\">1</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">3</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">5</span><span style=\\\"color: #24292F\\\">];</span></span></code></pre>\"],[764762786,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte c </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">23</span><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[1227681716,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte[] arr1 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> [</span><span style=\\\"color: #0550AE\\\">5</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">24</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">56</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">243</span><span style=\\\"color: #24292F\\\">];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte[] arr2 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">base16</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">`aeeecdefabcd12345567888822`</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte[] arr3 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">base64</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">`aGVsbG8gYmFsbGVyaW5hICEhIQ==`</span><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[410016731,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte a </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">13</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte b </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">45</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte c </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> a </span><span style=\\\"color: #CF222E\\\">&amp;</span><span style=\\\"color: #24292F\\\"> b;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte d </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> a </span><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\"> b;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">yte e </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> a </span><span style=\\\"color: #CF222E\\\">^</span><span style=\\\"color: #24292F\\\"> b;</span></span></code></pre>\"],[-1994792604,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">able</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #24292F\\\">Person</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> t1 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">table</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">{ primarykey id, primarykey salary, name, age, married }, [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">\\t {</span><span style=\\\"color: #0550AE\\\">1</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">300.5</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;jane&quot;</span><span style=\\\"color: #24292F\\\">,  </span><span style=\\\"color: #0550AE\\\">30</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">\\t {</span><span style=\\\"color: #0550AE\\\">2</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">302.5</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;anne&quot;</span><span style=\\\"color: #24292F\\\">,  </span><span style=\\\"color: #0550AE\\\">23</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">false</span><span style=\\\"color: #24292F\\\">},</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">\\t {</span><span style=\\\"color: #0550AE\\\">3</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">320.5</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;john&quot;</span><span style=\\\"color: #24292F\\\">,  </span><span style=\\\"color: #0550AE\\\">33</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> We can also create the row records seperately and then use it with</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">table</span><span style=\\\"color: #24292F\\\"> definition</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">erson p1 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> { id</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">1</span><span style=\\\"color: #24292F\\\">, age</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">30</span><span style=\\\"color: #24292F\\\">, salary</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">300.50</span><span style=\\\"color: #24292F\\\">, name</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;jane&quot;</span><span style=\\\"color: #24292F\\\">, married</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\"> };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">erson p2 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> { id</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">1</span><span style=\\\"color: #24292F\\\">, age</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">30</span><span style=\\\"color: #24292F\\\">, salary</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">300.50</span><span style=\\\"color: #24292F\\\">, name</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;jane&quot;</span><span style=\\\"color: #24292F\\\">, married</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">true</span><span style=\\\"color: #24292F\\\"> };</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">able</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #24292F\\\">Person</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> t1 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">table</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">{ primarykey id, salary, name, age, married },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">[p1, p2]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[2023582958,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ap</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> m </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #0A3069\\\">&quot;fname&quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;John&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;lname&quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Doe&quot;</span><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Field based access</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">tring firstName </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> m.fname;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Following will result </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> a runtime </span><span style=\\\"color: #CF222E\\\">error</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">tring middleName </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> m.mname;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Index based access</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">tring</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\"> firstName </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> m[</span><span style=\\\"color: #0A3069\\\">&quot;fname&quot;</span><span style=\\\"color: #24292F\\\">];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Following will </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">null</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">tring</span><span style=\\\"color: #CF222E\\\">?</span><span style=\\\"color: #24292F\\\"> middleName </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> m[</span><span style=\\\"color: #0A3069\\\">&quot;mname&quot;</span><span style=\\\"color: #24292F\\\">];</span></span></code></pre>\"],[1160833343,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Create and attach span to the </span><span style=\\\"color: #CF222E\\\">default</span><span style=\\\"color: #24292F\\\"> Ballerina request trace.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">nt spanId </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">startSpan</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Child Span&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">// Do Something</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">finishSpan</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">spanId</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Create a completely </span><span style=\\\"color: #CF222E\\\">new</span><span style=\\\"color: #24292F\\\"> trace.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">nt spanId </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">startRootSpan</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Parent Span&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">//Do Something</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">nt spanId2 </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">startSpan</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Child Span&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">parentSpanId</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> spanId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">// Do Something</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">finishSpan</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">spanId2</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">// Do Something</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">finishSpan</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">spanId</span><span style=\\\"color: #24292F\\\">);</span></span></code></pre>\"],[1674383563,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Create counter and register.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ap</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> counterTags </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> { </span><span style=\\\"color: #0A3069\\\">&quot;method&quot;</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;GET&quot;</span><span style=\\\"color: #24292F\\\"> };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">bserve</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Counter counterWithTags </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">new</span><span style=\\\"color: #24292F\\\"> (</span><span style=\\\"color: #0A3069\\\">&quot;CounterWithTags&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #953800\\\">desc</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Some description&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">tags</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> counterTags);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ounterWithTags.</span><span style=\\\"color: #8250DF\\\">register</span><span style=\\\"color: #24292F\\\">() but {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">  </span><span style=\\\"color: #CF222E\\\">error</span><span style=\\\"color: #24292F\\\"> e </span><span style=\\\"color: #CF222E\\\">=&gt;</span><span style=\\\"color: #24292F\\\"> log</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">printError</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Cannot register the counter&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">err</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> e)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Create statistics config to enable statistics calculation.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">bserve</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">StatisticConfig[] statsConfigs </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> [];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">bserve</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">StatisticConfig config </span><span style=\\\"color: #CF222E\\\">=</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   {timeWindow</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #0550AE\\\">30000</span><span style=\\\"color: #24292F\\\">, percentiles</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0550AE\\\">0.33</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">0.5</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">0.9</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">0.99</span><span style=\\\"color: #24292F\\\">], buckets</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #0550AE\\\">3</span><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">tatsConfigs[</span><span style=\\\"color: #0550AE\\\">0</span><span style=\\\"color: #24292F\\\">]</span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\">config;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Create gauge and register.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">bserve</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Gauge gaugeWithStats </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">new</span><span style=\\\"color: #24292F\\\"> (</span><span style=\\\"color: #0A3069\\\">&quot;GaugeWithTags&quot;</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #953800\\\">desc</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;Some description&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">tags</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> gaugeTags,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #953800\\\">statisticConfig</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> statsConfigs);</span></span></code></pre>\"],[-903382389,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Get All Metrics</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">bserve</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Metric[] metrics </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">getAllMetrics</span><span style=\\\"color: #24292F\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">oreach metric </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> metrics {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   </span><span style=\\\"color: #6E7781\\\">// Do something.</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">/</span><span style=\\\"color: #24292F\\\"> Look up a registered metric.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ap</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> tags </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> { </span><span style=\\\"color: #0A3069\\\">&quot;method&quot;</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot;GET&quot;</span><span style=\\\"color: #24292F\\\"> };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">bserve</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Counter</span><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">observe:Gauge</span><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">() metric </span><span style=\\\"color: #CF222E\\\">=</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">lookupMetric</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;MetricName&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">tags</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> tags);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">atch metric {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Counter counter </span><span style=\\\"color: #CF222E\\\">=&gt;</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">           counter.</span><span style=\\\"color: #8250DF\\\">increment</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">amount</span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #0550AE\\\">10</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   observe</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Gauge gauge </span><span style=\\\"color: #CF222E\\\">=&gt;</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">           gauge.</span><span style=\\\"color: #8250DF\\\">increment</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">amount</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10.0</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   () </span><span style=\\\"color: #CF222E\\\">=&gt;</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">          io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;No Metric Found!&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">   }</span></span></code></pre>\"],[257835475,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ollingWindow </span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">     timeWindowMillis</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10000</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">     bucketSizeMillis</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">2000</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">     requestVolumeThreshold</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10</span></span></code></pre>\"]]","slug":"2018-06-26-improvements-and-new-features-in-ballerina-0.980.0-release"},"__N_SSG":true}