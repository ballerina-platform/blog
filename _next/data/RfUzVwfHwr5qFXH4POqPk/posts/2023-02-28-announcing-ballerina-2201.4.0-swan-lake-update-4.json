{"pageProps":{"frontmatter":{"layout":"blog-post","title":"Announcing Ballerina 2201.4.0 (Swan Lake Update 4)","author":"Sameera Jayasoma","published-date":"28 February 2023","status":"Published","socialmediaimage":"Ballerina-Swan-Lake-GA-Release-banner-02-with-button.png","permalink":"/posts/2023-02-28-announcing-ballerina-2201.4.0-swan-lake-update-4/"},"content":"\n<style>.cBlogContent p{white-space: break-spaces !important;}</style>\n\nWe are happy to announce a new release, [Ballerina 2201.4.0 (Swan Lake Update 4)](https://ballerina.io/downloads/), the fourth update release of Ballerina Swan Lake. This release includes significant improvements to the language, standard library, runtime, and tooling, with a strong focus on standard library and tooling enhancements. While less flashy, these improvements make this release a significant step forward.\n\nTuple members can now be annotated with annotations defined for the field attachment point. However, such annotations are not allowed on the tuple rest descriptor. \n\n```ballerina\ntype RGB [\n    @display {label: \"R\"} int:Unsigned8,     \n    @display {label: \"G\"} int:Unsigned8,     \n    @display {label: \"B\"} int:Unsigned8 \n];\n```\n\nWith this nice addition to the language, you can now write an Azure function with multiple output bindings in Ballerina. \n\n```ballerina\nimport ballerina/http;\nimport ballerinax/azure_functions as af;\n\ntype Album record {|\n    string id;\n    string title;\n    string artist;\n    decimal price;\n|};\n\nservice / on new af:HttpListener() {\n    resource function post queue(@http:Payload Album album) returns [@af:HttpOutput http:Created, @af:QueueOutput {queueName: \"albums\"} string] {\n        http:Created httpRes = {\n            body: album.id + \" Added to the queue!\"\n        };\n        return [httpRes, album.id];\n    }\n}\n```\n\nThis release comes with several bug fixes that address specification deviations present in previous versions. You may experience code breakage due to these fixes. Despite the potential for temporary disruption, it's critical to address these deviations to ensure the long-term stability and health of the language. \n\nIn previous versions, the compiler incorrectly identified the type of the following query action as `error?`.\n\n```ballerina\npublic function main() {\n    error? e = from int i in 1 ... 10\n        do {\n            io:println(i);\n        };\n}\n```\n\nYou can write the above code as follows with Update 4. \n\n```ballerina\npublic function main() {\n    from int i in 1 ... 3\n    do {\n        io:println(i);\n    };\n}\n```\n\nHere is another bug fix. Note the usage of the `check` keyword before the `from` keyword. In previous versions, the compiler includes the `error` type in the query action type when errors return from the `do` clause. \n\n```ballerina\nfunction appendPRs(sheets:Client gsheets, PR[] pullRequests) returns error? {\n    error? e = from var {url, title, state, created_at, updated_at} in pullRequests\n        do {\n            check gsheets->appendRowToSheet(spreadSheetId, sheetName,\n                [url, title, state, created_at, updated_at]);\n        };\n    return e;\n}\n```\n\nYou can write the above code as follows with Update 4. \n\n```ballerina\nfunction appendPRs(sheets:Client gsheets, PR[] pullRequests) returns error? {\n    from var {url, title, state, created_at, updated_at} in pullRequests\n    do {\n        check gsheets->appendRowToSheet(spreadSheetId, sheetName,\n                [url, title, state, created_at, updated_at]);\n    };\n}\n```\n\nWe added several new features to the standard library, including an experimental new feature that simplifies data persistence in Ballerina.  We believe this feature can potentially enhance your overall development experience. The concept is to declare the domain data model using Ballerina record types that serves as the definitive source of truth. This record type definition generates a client API to access and modify the data stored in MySQL, the currently supported data store. We will publish more information about this feature in a future blog post. See the [release note](https://ballerina.io/downloads/swan-lake-release-notes/swan-lake-2201.4.0#standard-library-updates) for more details of other standard library features. \n\nWe also introduced several new features and improvements to the developer tools in the platform.\n\n- Now, you can execute tests using the GraalVM native image. Just add the `--native` option to the `bal test` command.  Please note that the GraalVM native image support in Ballerina is still an experimental feature. \n- We enhanced the Ballerina VSCode extension experience with several new code actions and improved the sorting of module-level completion items.\n- Improved the `bal format` command to format modules and source files individually. \n\nFor a detailed list of what's new in Swan Lake Update 4, see the [release note](https://ballerina.io/downloads/swan-lake-release-notes/swan-lake-2201.4.0).\n\nWe thank the Ballerina community for your invaluable support and feedback in shaping it into what it is today. We are excited to present this release and hope you enjoy it.\n","codes":"[[-158320299,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">RGB</span><span style=\\\"color: #24292F\\\"> [</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    @</span><span style=\\\"color: #0550AE\\\">display</span><span style=\\\"color: #24292F\\\"> {label: </span><span style=\\\"color: #0A3069\\\">&quot;R&quot;</span><span style=\\\"color: #24292F\\\">} </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Unsigned8,     </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    @</span><span style=\\\"color: #0550AE\\\">display</span><span style=\\\"color: #24292F\\\"> {label: </span><span style=\\\"color: #0A3069\\\">&quot;G&quot;</span><span style=\\\"color: #24292F\\\">} </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Unsigned8,     </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    @</span><span style=\\\"color: #0550AE\\\">display</span><span style=\\\"color: #24292F\\\"> {label: </span><span style=\\\"color: #0A3069\\\">&quot;B&quot;</span><span style=\\\"color: #24292F\\\">} </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Unsigned8 </span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">];</span></span></code></pre>\"],[-83895838,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/http;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerinax/azure_functions </span><span style=\\\"color: #CF222E\\\">as</span><span style=\\\"color: #24292F\\\"> af;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Album</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> id;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> title;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> artist;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">decimal</span><span style=\\\"color: #24292F\\\"> price;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">service</span><span style=\\\"color: #24292F\\\"> / </span><span style=\\\"color: #CF222E\\\">on</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">new</span><span style=\\\"color: #24292F\\\"> af:HttpListener() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">resource</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">post</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">queue</span><span style=\\\"color: #24292F\\\">(@</span><span style=\\\"color: #0550AE\\\">http</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">Payload</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Album</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">album</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> [@</span><span style=\\\"color: #953800\\\">af</span><span style=\\\"color: #24292F\\\">:HttpOutput </span><span style=\\\"color: #953800\\\">http</span><span style=\\\"color: #24292F\\\">:Created, @</span><span style=\\\"color: #953800\\\">af</span><span style=\\\"color: #24292F\\\">:QueueOutput {</span><span style=\\\"color: #953800\\\">queueName</span><span style=\\\"color: #24292F\\\">: </span><span style=\\\"color: #0A3069\\\">&quot;albums&quot;</span><span style=\\\"color: #24292F\\\">} </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\">] {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        http</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Created httpRes </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            body</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> album.id + </span><span style=\\\"color: #0A3069\\\">&quot; Added to the queue!&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> [httpRes, album.id];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-94988141,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">main</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">error?</span><span style=\\\"color: #24292F\\\"> e </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">from</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> i </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">1</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">...</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">10</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #CF222E\\\">do</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">i</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[236556802,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">main</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">from</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> i </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">1</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">...</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">3</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">do</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">i</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-1709826318,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">appendPRs</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">sheets</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Client gsheets, </span><span style=\\\"color: #953800\\\">PR</span><span style=\\\"color: #24292F\\\">[] </span><span style=\\\"color: #953800\\\">pullRequests</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">error?</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">error?</span><span style=\\\"color: #24292F\\\"> e </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">from</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">var</span><span style=\\\"color: #24292F\\\"> {url, title, state, created_at, updated_at} </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> pullRequests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #CF222E\\\">do</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">            </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> gsheets</span><span style=\\\"color: #CF222E\\\">-&gt;</span><span style=\\\"color: #8250DF\\\">appendRowToSheet</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">spreadSheetId</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">sheetName</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">                [url, title, state, created_at, updated_at]);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> e;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-1738524677,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">appendPRs</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">sheets</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">Client gsheets, </span><span style=\\\"color: #953800\\\">PR</span><span style=\\\"color: #24292F\\\">[] </span><span style=\\\"color: #953800\\\">pullRequests</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">error?</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">from</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">var</span><span style=\\\"color: #24292F\\\"> {url, title, state, created_at, updated_at} </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> pullRequests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">do</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #CF222E\\\">check</span><span style=\\\"color: #24292F\\\"> gsheets</span><span style=\\\"color: #CF222E\\\">-&gt;</span><span style=\\\"color: #8250DF\\\">appendRowToSheet</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">spreadSheetId</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">sheetName</span><span style=\\\"color: #24292F\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">                [url, title, state, created_at, updated_at]);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"]]","slug":"2023-02-28-announcing-ballerina-2201.4.0-swan-lake-update-4"},"__N_SSG":true}