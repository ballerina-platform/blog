{"pageProps":{"frontmatter":{"layout":"blog-post","title":"Introduction to the new features and changes introduced with Ballerina 0.982.0","author":"Maryam Ziyad Mohamed","published-date":"08 October 2018","status":"Published","abstract":"Introduction to the new features and changes introduced with Ballerina 0.982.0.","socialmediaimage":"pexels-photo-206274.jpeg","permalink":"/posts/introduction-to-new-features-and-changes-introduced-with-ballerina-0.982.0/"},"content":"\n\nThe Ballerina 0.982.0 release includes new features, improvements and bug fixes including introduction of the new `channel` type, changes to the `main` function, improvements to records and objects, and support for HTTP 1.1 piplelining.\n\nAn initial version of the Ballerina Native feature that allows simple Ballerina programs with the `main` function to be compiled into native executables, is also introduced with this release.\n\n## Language and runtime\n\n### Introduction of the channel type\n\nThe `channel` constrained type is introduced for communication between parallel processes in Ballerina programs. \nA `channel` can be defined only as a top level node. Channels can be used for message correlation by sending and receiving messages via different resources to the same channel. \nChannels can also be used for inter-worker communication and worker synchronization.\n\n**Defining a channel constrained by the `json` type**\n\n```ballerina\nchannel<json> jsonChannel; \n```\n\n**Sending a message to the channel**\n\n```ballerina\n# One of the receivers waiting on `key` receives the message.\n# If there is no receiver, the message is stored and execution continues.\n# A receiver can arrive later and fetch the message.\nmessage -> jsonChannel, key; \n```\n\n**Receiving a message from the channel with the given key** \n\n```ballerina\n# Execution waits here if the message is not available.\njson result <- jsonChannel, key;\n```\n\n### Introduction of abstract objects\n\nAn abstract object is identified by the `abstract` keyword. Abstract objects only describe the type of each field and method, they do not describe the implementation of methods. \nAn abstract object type should not have an object constructor method and cannot be initialized using the object initializer. Abstract objects do not have an implicit initial value. \n\n```ballerina\npublic type Foo abstract object {\n    public string name;\n    public int id;\n\n    function getName() returns string;\n\n    function getID() returns int;\n};\n```\n\n### Introduction of record iteration support\n\nRecords are now iterable, and the `foreach` statement and iterable operations can now be used with records. \nWhen iterating a record, one can either iterate over the fields (i.e., field name and value) or iterate only over the field values.\n\n```ballerina\ntype Person record {\n    string name;\n    int age;\n    string address;\n};\n```\n\nThe `foreach` statement can be used with an instance of this record as follows:\n\n```ballerina\nforeach field, value in person {\n    io:println(field + \" : \" + <string>value);\n}\n```\n\nThe `foreach` statement can be used to iterate only over the field values as follows:\n\n```ballerina\nforeach value in person {\n    io:println(value);\n}\n```\n\n### Changes to the `main` function\n\nBased on the latest changes, the `main` function has to be marked `public` and can return an int.\n\nNow it is also possible to execute ballerina `run` to invoke any `public` function in the entry package.\nFor example, if you want to invoke the public function `add` in the `calculator` package, you can execute ballerina `run` and specify the integer arguments `4` and `5` as follows:\n\n```cmd\nballerina run calculator:add 4 5\n```\n\nIf a function is not specified, `main` is considered as the function to run.\n\nThe function invoked via `ballerina run` (including the `main` function) will be data-binding and can have zero or more parameters of any supported type, including any number of required/defaultable parameters and a single rest parameter. \nThis function can also return a value.\n\nFor example, consider the following public function in the package `currency`:\n\n```ballerina\npublic function queryChanges(string host, int port = 8080, string… params) returns float {\n\n}\n```\nInvoke the function using Ballerina `run` as follows:\n```cmd\nballerina run --printreturn currency:queryChanges localhost -port=8181 high day\n```\nThe function invocation results in a value assignment as follows:\n- `host` ← `\"localhost\"`\n- `port` ← `8181`\n- `params` ← `[\"high\", \"day\"]`\n\nWhen the `--printreturn` flag is set, the return value is printed to the standard out stream.\n\n### New documentation syntax\n\nOld syntax:\n\n```ballerina\ndocumentation {\n    Adds parameter `x` and parameter `y`.\n    P{{x}} one thing to be added\n    P{{y}} another thing to be added\n    R{{}} the sum of them\n}\nfunction add(int x, int y) returns int { return x + y; }\n```\n\nNew syntax:\n\n```ballerina\n# Adds parameter `x` and parameter `y`.\n# + x - one thing to be added\n# + y - another thing to be added\n# + return - the sum of them\nfunction add(int x, int y) returns int { return x + y; }\n```\n\n### Reorder documentation in resources\n\nIn previous versions, documentation was added after annotation attachments of resources. Now documentation should be added before the annotation attachment.\n\nOld syntax:\n\n```ballerina\nservice<http:Service> update_token bind { port: 9295 } {\n\n    @http:ResourceConfig {\n        methods:[\"GET\"]\n    }\n    # Updates the access token.\n    #\n    # + caller - Endpoint\n    one_px_image(endpoint caller) {\n\n    }\n}\n```\n\nNew syntax:\n\n```ballerina\nservice<http:Service> update_token bind { port: 9295 } {\n\n    # Updates the access token.\n    #\n    # + caller - Endpoint\n    @http:ResourceConfig {\n        methods:[\"GET\"]\n    }\n    one_px_image(endpoint caller) {\n\n    }\n}\n```\n\n### Changes to record/object field syntax\n\nOld syntax:\n\n```ballerina\ntype foo record {\n    string a,\n    string b,\n};\n\ntype bar object {\n    string a,\n    string b,\n};\n```\n\nNew syntax:\n\n```ballerina\ntype foo record {\n    string a;\n    string b;\n};\n\ntype bar object {\n    string a;\n    string b;\n};\n```\n\n### New anonymous functions syntax\n\nThe syntax of anonymous functions has been changed to resemble normal function definitions.\n\nOld syntax:\n\n```ballerina\nvar lambda = (int b) => (int) {\n    int x = b * b;\n    return x;\n};\n```\n\nNew syntax:\n\n```ballerina\nvar lambda = function (int b) returns int {\n    int x = b * b;\n    return x;\n};\n```\n\nA new \"Arrow Function Expression\" is introduced as a simple alternative to anonymous functions that only have a return statement as the body:\n\n```ballerina\nfunction (int, string) returns string lambdaVar = (param1, param2) => param2.toUpper();\n```\n\n### Removal of implicit cast from int to float\n\nNow it is necessary to explicitly define a float with a decimal point.\n\n```ballerina\nfloat x = 0; // Compile Error\nfloat x = 0.0; // Working Code\n```\n\n### Tracking tainted state changes of function parameters\n\nThe taint analyzer keeps track of the tainted state of parameters in different execution conditions. \nThis information is used to update the tainted state of the arguments used in a function invocation, and to make sure that the tainted state is propagated correctly when the parameter is an out parameter or an in-out parameter.\n \n### Option/Param order enforcement with the run command\n\nOption vs parameter ordering has been enforced with the Ballerina `run` command. All options now need to be specified before the file or package to run.\n\nAny and all arguments specified after the file or package are now considered program arguments.\n\nA config file can be specified with the `run` command as follows:\n```cmd\nballerina run --config myConfig.conf calculator 4 5\n```\n\nSpecifying the `--config` argument as follows, after the package `calculator` would not result in it being identified as an option:\n```cmd\nballerina run calculator --config myConfig.conf 4 5\n```\n\n### Ballerina native\n\nThe Ballerina Native feature is the introduction of an LLVM-based backend for the Ballerina compiler. It allows Ballerina programs to be compiled into native executables.\n\n#### Prerequisites\n- Unix based (Linux/MacOS) operating system to run the initial version. Other operating systems will be supported in future versions.\n- GCC compiler (it is possible to use `clang` or `ld`. However, the current recommended option is `gcc`)\n\n#### Supported language constructs\n- `main` function (arguments are ignored)\n- `int` and `boolean` types\n- `if` condition\n- `while` loop\n- Function calls and return values\n- Partial support for `println` for `int` values\n\n#### How to run\n- Build a Ballerina program with the native option\n`ballerina build --native -o myballerinamain  myballerinamain.bal`\n\n- Run the created executable\n`./myballerinamain`\n\n#### Command-line flags\nThe following additional options are valid when the `--native` option is provided:\n`--dump-bir` prints the Ballerina intermediate representation\n`--dump-llvm-ir` prints the LLVM intermediate representation assembly code\n\n## Standard library\n\n- Support for HTTP 1.1 pipelining\n- Enhanced support for compression/decompression\n- Change of status code and reason to be optional parameters for the `close` action of the WebSocket endpoint\n- Support to directly configure SSL certificates and keys without keystores\n- Support to define enum type in gRPC request/response messages\n\n## Build and package management\n\n### Mandating the build on Ballerina push and install\n\nBy default, the sources are built before pushing the package to Ballerina Central and before installing the package in the home repository. \n\nThe `--no-build` flag could be used to skip building before pushing or installing.\n```cmd\nballerina push <package-name> --no-build\n```\n\n```cmd\nballerina install <package-name> --no-build\n```\n\n### Introduction of the uninstall command\n\nPackages that are installed in the home repository can now be uninstalled or removed using the `uninstall` command.\n```cmd\nballerina uninstall <org-name>/<package-name>:<version>\n```\n\n## IDE plugins\n\n- Diagram editing support in VSCode\n- Language Server integration support in IDEA plugin: this results in providing all language intellisense support \nthrough the Language Server\n- Variable definition auto generation code action\n- Attached function’s implementation snippet\n- Object constructor auto generation code action\n\n## Extensions\n\n### Kubernetes\n- Support is now introduced for Helm Chart generation\n\n## Performance results\nFrom Ballerina 0.982.0 onward, [a performance test result summary](https://github.com/ballerina-platform/ballerina-lang/blob/v0.982.0/performance/benchmarks/summary.md) would also be made available with each release. \n\n## Bug fixes \n\nPlease refer the [GitHub milestone](https://github.com/ballerina-platform/ballerina-lang/issues?q=is%3Aissue+milestone%3A0.982.0+is%3Aclosed+label%3AType%2FBug) to view bug fixes.\n\n## Getting started\n\nYou can download the Ballerina distributions, try samples, and read the documentation at https://ballerina.io. \nYou can also visit the [Quick Tour] (https://ballerina.io/learn/quick-tour/) to get started. \nWe encourage you to report issues, improvements, and suggestions at the [Ballerina Github Repository](https://github.com/ballerina-platform/ballerina-lang).\n","codes":"[[380876675,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">channel</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #0550AE\\\">json</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> jsonChannel;</span></span></code></pre>\"],[1580015828,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># One of the receivers waiting on `key` receives the message.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># If there is no receiver, the message is stored and execution continues.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># A receiver can arrive later and fetch the message.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">message </span><span style=\\\"color: #CF222E\\\">-&gt;</span><span style=\\\"color: #24292F\\\"> jsonChannel, </span><span style=\\\"color: #CF222E\\\">key</span><span style=\\\"color: #24292F\\\">;</span></span></code></pre>\"],[-138883637,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Execution waits here if the message is not available.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #0550AE\\\">json</span><span style=\\\"color: #24292F\\\"> result </span><span style=\\\"color: #CF222E\\\">&lt;-</span><span style=\\\"color: #24292F\\\"> jsonChannel, key;</span></span></code></pre>\"],[2099200725,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Foo</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">abstract</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">object</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> id;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">getName</span><span style=\\\"color: #24292F\\\">() </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">getID</span><span style=\\\"color: #24292F\\\">() </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[1921411263,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Person</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> name;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> age;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> address;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-693122708,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">foreach </span><span style=\\\"color: #24292F\\\">field, value </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> person {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">field</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">+</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">&quot; : &quot;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">+</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #953800\\\">value</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[481553741,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">foreach </span><span style=\\\"color: #24292F\\\">value </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> person {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">value</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[1984668471,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ballerina run calculator:</span><span style=\\\"color: #0550AE\\\">add</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">4</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">5</span></span></code></pre>\"],[336946577,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">queryChanges</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">host</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">port</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">8080</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\">… </span><span style=\\\"color: #953800\\\">params</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">float</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[1842351276,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ballerina run </span><span style=\\\"color: #CF222E\\\">--</span><span style=\\\"color: #24292F\\\">printreturn currency:queryChanges localhost </span><span style=\\\"color: #CF222E\\\">-</span><span style=\\\"color: #24292F\\\">port</span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #0550AE\\\">8181</span><span style=\\\"color: #24292F\\\"> high </span><span style=\\\"color: #0550AE\\\">day</span></span></code></pre>\"],[-283601625,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">documentation {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    Adds </span><span style=\\\"color: #CF222E\\\">parameter</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">`x`</span><span style=\\\"color: #24292F\\\"> and </span><span style=\\\"color: #CF222E\\\">parameter</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">`y`</span><span style=\\\"color: #24292F\\\">.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    P{{x}} one thing to be added</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    P{{y}} another thing to be added</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    R{{}} the sum of them</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">add</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">x</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">y</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> { </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> x </span><span style=\\\"color: #CF222E\\\">+</span><span style=\\\"color: #24292F\\\"> y; }</span></span></code></pre>\"],[1077391397,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># Adds parameter `x` and parameter `y`.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">x</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">one thing to be added</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">y</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">another thing to be added</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">return</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">the sum of them</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">add</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">x</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">y</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> { </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> x </span><span style=\\\"color: #CF222E\\\">+</span><span style=\\\"color: #24292F\\\"> y; }</span></span></code></pre>\"],[539087631,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">service</span><span style=\\\"color: #24292F\\\">&lt;http:Service&gt; update_token bind { port</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">9295</span><span style=\\\"color: #24292F\\\"> } {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    @</span><span style=\\\"color: #0550AE\\\">http</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">ResourceConfig</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        methods</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;GET&quot;</span><span style=\\\"color: #24292F\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Updates the access token.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">caller</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">Endpoint</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #8250DF\\\">one_px_image</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">endpoint</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">caller</span><span style=\\\"color: #24292F\\\">) {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[788537325,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">service</span><span style=\\\"color: #24292F\\\">&lt;http:Service&gt; update_token bind { port</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">9295</span><span style=\\\"color: #24292F\\\"> } {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># Updates the access token.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\">#</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\"># </span><span style=\\\"color: #CF222E\\\">+ </span><span style=\\\"color: #24292F\\\">caller</span><span style=\\\"color: #CF222E\\\"> - </span><span style=\\\"color: #6E7781\\\">Endpoint</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    @</span><span style=\\\"color: #0550AE\\\">http</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #0550AE\\\">ResourceConfig</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        methods</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">[</span><span style=\\\"color: #0A3069\\\">&quot;GET&quot;</span><span style=\\\"color: #24292F\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #8250DF\\\">one_px_image</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">endpoint</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">caller</span><span style=\\\"color: #24292F\\\">) {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[714048857,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">foo</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> a,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> b,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">bar</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">object</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> a,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> b,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[1455771293,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">foo</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> a;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> b;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">bar</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">object</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> a;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> b;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-335260819,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #0550AE\\\">var</span><span style=\\\"color: #24292F\\\"> lambda </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> (</span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">b</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">=&gt;</span><span style=\\\"color: #24292F\\\"> (</span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> x </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> b </span><span style=\\\"color: #CF222E\\\">*</span><span style=\\\"color: #24292F\\\"> b;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> x;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-301319500,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #0550AE\\\">var</span><span style=\\\"color: #24292F\\\"> lambda </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> (</span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">b</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> x </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> b </span><span style=\\\"color: #CF222E\\\">*</span><span style=\\\"color: #24292F\\\"> b;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> x;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">};</span></span></code></pre>\"],[-116966065,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> (</span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> lambdaVar </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> (</span><span style=\\\"color: #953800\\\">param1</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #953800\\\">param2</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">=&gt;</span><span style=\\\"color: #24292F\\\"> param2.</span><span style=\\\"color: #8250DF\\\">toUpper</span><span style=\\\"color: #24292F\\\">();</span></span></code></pre>\"],[-59818563,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #0550AE\\\">float</span><span style=\\\"color: #24292F\\\"> x </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">0</span><span style=\\\"color: #24292F\\\">; </span><span style=\\\"color: #6E7781\\\">// Compile Error</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #0550AE\\\">float</span><span style=\\\"color: #24292F\\\"> x </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">0.0</span><span style=\\\"color: #24292F\\\">; </span><span style=\\\"color: #6E7781\\\">// Working Code</span></span></code></pre>\"],[-2103275072,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ballerina run </span><span style=\\\"color: #CF222E\\\">--</span><span style=\\\"color: #24292F\\\">config myConfig.conf calculator </span><span style=\\\"color: #0550AE\\\">4</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">5</span></span></code></pre>\"],[-699557432,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ballerina run calculator </span><span style=\\\"color: #CF222E\\\">--</span><span style=\\\"color: #24292F\\\">config myConfig.conf </span><span style=\\\"color: #0550AE\\\">4</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">5</span></span></code></pre>\"],[1078927932,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ballerina push </span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #24292F\\\">package</span><span style=\\\"color: #CF222E\\\">-</span><span style=\\\"color: #24292F\\\">name</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">--</span><span style=\\\"color: #24292F\\\">no</span><span style=\\\"color: #CF222E\\\">-</span><span style=\\\"color: #24292F\\\">build</span></span></code></pre>\"],[-454362595,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ballerina install </span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #24292F\\\">package</span><span style=\\\"color: #CF222E\\\">-</span><span style=\\\"color: #24292F\\\">name</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">--</span><span style=\\\"color: #24292F\\\">no</span><span style=\\\"color: #CF222E\\\">-</span><span style=\\\"color: #24292F\\\">build</span></span></code></pre>\"],[-1557986933,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">ballerina uninstall </span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #24292F\\\">org</span><span style=\\\"color: #CF222E\\\">-</span><span style=\\\"color: #24292F\\\">name</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\">/</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #24292F\\\">package</span><span style=\\\"color: #CF222E\\\">-</span><span style=\\\"color: #24292F\\\">name</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\">:</span><span style=\\\"color: #CF222E\\\">&lt;</span><span style=\\\"color: #24292F\\\">version</span><span style=\\\"color: #CF222E\\\">&gt;</span></span></code></pre>\"]]","slug":"2018-10-08-introduction-to-new-features-and-changes-introduced-with-ballerina-0.982.0"},"__N_SSG":true}