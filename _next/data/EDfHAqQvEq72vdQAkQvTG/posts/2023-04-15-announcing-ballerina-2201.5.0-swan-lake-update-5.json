{"pageProps":{"frontmatter":{"layout":"blog-post","title":"Announcing Ballerina 2201.5.0 (Swan Lake Update 5)","author":"Ballerina Team","published-date":"15 April 2023","status":"Published","socialmediaimage":"Ballerina-Swan-Lake-GA-Release-banner-02-with-button.png","permalink":"/posts/2023-04-15-announcing-ballerina-2201.5.0-swan-lake-update-5/"},"content":"\n<style>.cBlogContent p{white-space: break-spaces !important;}</style>\n\nWe are excited to announce the fifth update release of Ballerina Swan Lake, [Ballerina 2201.5.0 (Swan Lake Update 5)](https://ballerina.io/downloads/). In addition to the existing macOS installer, this release includes a [new installer](https://dist.ballerina.io/downloads/2201.5.0/ballerina-2201.5.0-swan-lake-macos-arm-x64.pkg) specifically designed for installing Ballerina on your macOS-ARM platforms.\n\nAs the key highlight of this release, now, you can use regular expressions in Ballerina code via the new `lang.regexp` library as shown in the example below.\n\n```ballerina\nimport ballerina/lang.regexp;\nimport ballerina/io;\n\npublic function main() {\n    string:RegExp emailRegex = re `[A-Za-z]+@[A-Za-z]+\\.[A-Za-z]{2,}`;\n    boolean validEmail = emailRegex.isFullMatch(\"bob@example.com\");\n    io:println(validEmail); // Prints “true”.\n\n    regexp:RegExp commaSeparator = re `,`;\n    string[] names = commaSeparator.split(\"Bob,Frank,Will,Jack\");\n    io:println(names); // Prints “[\"Bob\",\"Frank\",\"Will\",\"Jack\"]”.\n\n    int patternCount = re `[bB].tt[a-z]*`.findAll(\"Butter was bought by Betty but the butter was bitter.\").length();\n    io:println(patternCount); // Prints “4”.\n\n    string result = regexp:replaceAll(re `0+`, \"10010011\", \"*\");\n    io:println(result); // Prints “1*1*11”.\n}\n```\n\nAlso, a new `range` function has been introduced in the `lang.int` lang library, which can be used to iterate over a range of integers with a specified `step` as the difference between two successive integers.\n\n```ballerina\nimport ballerina/io;\n\npublic function main() {\n    // Prints all even numbers from zero (inclusive) to 6(exclusive)\n    // `start` is 0, `end` is 6, and `step` is 2.\n    foreach int i in int:range(0, 6, 2) {\n        io:println(i);\n    }\n}\n```\n\nFurthermore, now, you can mark a specific version of a package as deprecated in Ballerina Central with the new `bal deprecate` command.\n\n```bash\n$ bal deprecate ballerina/io:1.1.1 --message=\"This package is deprecated due to a security vulnerability.\"\n```\n\nSimilarly, you can undeprecate a version of a package with the `--undo` option.\n\n```bash\n$ bal deprecate ballerina/io:1.1.1 --undo\n```\n\nThe BindGen tool is also enhanced to support handling Java `null` values via options passed to the `bal bindgen` command.\n\nBeyond these highlights, the release includes numerous other notable additions and improvements to the language, runtime, standard library, and tooling. Further details about these enhancements are provided below.\n\n- The `main` function of a Ballerina program now accepts function parameters of built-in subtypes, which can be passed as command-line arguments.\n- Configurable variables of union types now accept structural values with ambiguous inherent types.\n- The `http` standard library now supports specifying a tuple type as the return type of service resource methods and having subtypes of `string|int|float|decimal|boolean` as client resource path parameter types.\n- The `@http:Payload` annotation is now optional for basic structured subtypes of `anydata` in HTTP resource methods. \n    ```ballerina\n    import ballerina/http;\n\n    type Album readonly & record {|\n        string title;\n        string artist;\n    |};\n\n    table<Album> key(title) albums = table [];\n\n    service / on new http:Listener(9090) {\n\n        // No need to have the `http:Payload` annotation here.\n        resource function post albums(Album album) returns Album {\n            albums.add(album);\n            return album;\n        }\n    }\n    ```\n- The `graphql` library is now enriched with a new feature to enable having GraphQL services as subgraphs in a GraphQL federation supergraph. \n\nTo learn more about the specific changes and improvements included in Swan Lake Update 5, see the [release note](https://ballerina.io/downloads/swan-lake-release-notes/swan-lake-2201.5.0).\n\nWe would like to thank the Ballerina community for their invaluable feedback and support in shaping it into what it is today. We look forward to your continued involvement in our efforts to improve the Ballerina language.\n\nCheers, \nThe Ballerina Team\n","codes":"[[1088408389,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/lang.regexp;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">main</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">RegExp emailRegex </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> re </span><span style=\\\"color: #0A3069\\\">`[A-Za-z]+@[A-Za-z]+</span><span style=\\\"color: #0550AE\\\">\\\\.</span><span style=\\\"color: #0A3069\\\">[A-Za-z]{2,}`</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">boolean</span><span style=\\\"color: #24292F\\\"> validEmail </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> emailRegex.</span><span style=\\\"color: #8250DF\\\">isFullMatch</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;bob@example.com&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">validEmail</span><span style=\\\"color: #24292F\\\">); </span><span style=\\\"color: #6E7781\\\">// Prints “true”.</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    regexp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #24292F\\\">RegExp commaSeparator </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> re </span><span style=\\\"color: #0A3069\\\">`,`</span><span style=\\\"color: #24292F\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\">[] names </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> commaSeparator.</span><span style=\\\"color: #8250DF\\\">split</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Bob,Frank,Will,Jack&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">names</span><span style=\\\"color: #24292F\\\">); </span><span style=\\\"color: #6E7781\\\">// Prints “[&quot;Bob&quot;,&quot;Frank&quot;,&quot;Will&quot;,&quot;Jack&quot;]”.</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> patternCount </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> re </span><span style=\\\"color: #0A3069\\\">`[bB].tt[a-z]*`</span><span style=\\\"color: #24292F\\\">.</span><span style=\\\"color: #8250DF\\\">findAll</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0A3069\\\">&quot;Butter was bought by Betty but the butter was bitter.&quot;</span><span style=\\\"color: #24292F\\\">).</span><span style=\\\"color: #8250DF\\\">length</span><span style=\\\"color: #24292F\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">patternCount</span><span style=\\\"color: #24292F\\\">); </span><span style=\\\"color: #6E7781\\\">// Prints “4”.</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> result </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> regexp</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">replaceAll</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">re</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">`0+`</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;10010011&quot;</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0A3069\\\">&quot;*&quot;</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">result</span><span style=\\\"color: #24292F\\\">); </span><span style=\\\"color: #6E7781\\\">// Prints “1*1*11”.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-1133756882,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/io;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">public</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">main</span><span style=\\\"color: #24292F\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\">// Prints all even numbers from zero (inclusive) to 6(exclusive)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\">// `start` is 0, `end` is 6, and `step` is 2.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">foreach </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #24292F\\\"> i </span><span style=\\\"color: #CF222E\\\">in</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">int</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">range</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #0550AE\\\">0</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">6</span><span style=\\\"color: #24292F\\\">, </span><span style=\\\"color: #0550AE\\\">2</span><span style=\\\"color: #24292F\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        io</span><span style=\\\"color: #CF222E\\\">:</span><span style=\\\"color: #8250DF\\\">println</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">i</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"],[-1797888031,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #953800\\\">$</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">bal</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">deprecate</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">ballerina/io:1.1.1</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">--message=</span><span style=\\\"color: #0A3069\\\">&quot;This package is deprecated due to a security vulnerability.&quot;</span></span></code></pre>\"],[-1079310748,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #953800\\\">$</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">bal</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">deprecate</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0A3069\\\">ballerina/io:1.1.1</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #0550AE\\\">--undo</span></span></code></pre>\"],[2035941293,\"<pre class=\\\"shiki github-light\\\" style=\\\"background-color: #ffffff\\\"><code><span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">import</span><span style=\\\"color: #24292F\\\"> ballerina/http;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">type</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">Album</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">readonly</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">&amp;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">record</span><span style=\\\"color: #24292F\\\"> {</span><span style=\\\"color: #CF222E\\\">|</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> title;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #0550AE\\\">string</span><span style=\\\"color: #24292F\\\"> artist;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">|</span><span style=\\\"color: #24292F\\\">};</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">table&lt;</span><span style=\\\"color: #24292F\\\">Album</span><span style=\\\"color: #CF222E\\\">&gt;</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">key</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">title</span><span style=\\\"color: #24292F\\\">) albums </span><span style=\\\"color: #CF222E\\\">=</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">table</span><span style=\\\"color: #24292F\\\"> [];</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #CF222E\\\">service</span><span style=\\\"color: #24292F\\\"> / </span><span style=\\\"color: #CF222E\\\">on</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">new</span><span style=\\\"color: #24292F\\\"> http:Listener(</span><span style=\\\"color: #0550AE\\\">9090</span><span style=\\\"color: #24292F\\\">) {</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #6E7781\\\">// No need to have the `http:Payload` annotation here.</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    </span><span style=\\\"color: #CF222E\\\">resource</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #CF222E\\\">function</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">post</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #8250DF\\\">albums</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">Album</span><span style=\\\"color: #24292F\\\"> </span><span style=\\\"color: #953800\\\">album</span><span style=\\\"color: #24292F\\\">) </span><span style=\\\"color: #CF222E\\\">returns</span><span style=\\\"color: #24292F\\\"> Album {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        albums.</span><span style=\\\"color: #8250DF\\\">add</span><span style=\\\"color: #24292F\\\">(</span><span style=\\\"color: #953800\\\">album</span><span style=\\\"color: #24292F\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">        </span><span style=\\\"color: #CF222E\\\">return</span><span style=\\\"color: #24292F\\\"> album;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color: #24292F\\\">}</span></span></code></pre>\"]]","slug":"2023-04-15-announcing-ballerina-2201.5.0-swan-lake-update-5"},"__N_SSG":true}